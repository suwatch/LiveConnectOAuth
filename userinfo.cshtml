@using System.Configuration
@using System.Collections
@using System.Security.Claims

@{
    var context = new HttpContextWrapper(HttpContext.Current);
    var liveEnabled = !String.IsNullOrEmpty(ConfigurationManager.AppSettings["LiveConnectClientId"])
        && !String.IsNullOrEmpty(ConfigurationManager.AppSettings["LiveConnectClientSecret"]);
    var hostName = context.Request.Url.Host;        
}

<style>
body {
    font-family: verdana,helvetica,arial,sans-serif;
    font-size: 100%;
}
table {
    border-collapse: collapse;
    border-spacing: 0px;
}
th, td {
    display: table-cell;
    padding: 5px;
    text-align: left;
}
th {
    color: #ffffff;
    background-color: #555555;
    border: 1px solid #d4d4d4;
    font-weight: bold;
}
td {
    border: 1px solid #d4d4d4;
}
table tr:nth-child(even) {
    background-color: #eee;
}
table tr:nth-child(odd) {
   background-color:#fff;
}
</style>

@if (!liveEnabled)
{
    <h4>LiveConnect settings are not configured for your site!</h4>
    <ol>
      <li>Goto <a href="https://manage.windowsazure.com/" target="blank">Azure Portal</a>.</li>
      <li>Navigate to your site <strong>CONFIGURE</strong> tab.</li>
      <li>Add the following keys to <strong>AppSettings</strong> section.    Their values are available at <a href="https://account.live.com/developers/applications" target="blank">Live application</a> App settings tab.
        <ul>
          <li>LiveConnectClientId</li>
          <li>LiveConnectClientSecret</li>
        </ul>    
      </li>
    </ol>
    <p/>    
    <h4>Add Redirect URLs to Live application!</h4>
    <ol>
      <li>Go to <a href="https://account.live.com/developers/applications" target="blank">Live application</a> Api settings tab.</li>
      <li>Add the below URLs as <strong>Redirect URLs</strong>.
        <ul>
          <li>@String.Format("http://{0}/login/callback", hostName)</li>
          <li>@String.Format("http://{0}/logout/complete", hostName)</li>
        </ul>    
      </li>
    </ol>    
}
else if (context.User != null && context.User.Identity != null && context.User.Identity.IsAuthenticated)
{
    <h4>User Information (<a href="/logout">logout</a>)</h4>
    <table id="userInfo">
        <tr>
            <th>Claim</th>
            <th>Type</th>
            <th>Value</th>		
        </tr>
        @foreach (var claim in ((ClaimsIdentity)context.User.Identity).Claims)
        {
            <tr>
                <td>@claim.Type</td>
                <td>@claim.ValueType</td>
                <td>@claim.Value</td>
            </tr>
        }
    </table>
}
else
{
    <h4>User is not signed in!</h4>
}